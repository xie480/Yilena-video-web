<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yilena.service.dao.FollowMapper">

    <insert id="addFollow">
        insert into user_following(id,followed_id, follower_id,created_time)
        values(#{id},#{followedId},#{followerId},#{createdTime})
    </insert>
    <update id="updateSpecialFollow">
        update user_following set is_special = #{isSpecial},updated_time = #{updatedTime}
        where followed_id = #{followedId} and follower_id = #{followerId}
    </update>
    <delete id="deleteFollow">
        delete from user_following where followed_id = #{followedId} and follower_id = #{followerId}
    </delete>
    <select id="getById" resultType="com.yilena.service.entity.po.UserFollowing">
        select id, followed_id as followedId, follower_id as followerId, is_special as isSpecial, created_time as createdTime, updated_time as updatedTime
        from user_following where followed_id = #{followedId} and follower_id = #{followerId}
    </select>
    <select id="getFollowingIds" resultType="java.lang.Long">
        select followed_id as followedId from user_following where follower_id = #{id}
    </select>
    <select id="isFollow" resultType="com.yilena.service.entity.po.UserFollowing">
        select id, followed_id as followedId, follower_id as followerId, is_special as isSpecial, created_time as createdTime, updated_time as updatedTime
        from user_following where followed_id = #{followedId} and follower_id = #{followerId}
    </select>
    <select id="getFollowingUsers" resultType="com.yilena.service.entity.vo.UserVO">
        SELECT
            u.id,
            u.username,
            u.image
        FROM
            user_following uf
                JOIN
            user u ON uf.followed_id = u.id
                LEFT JOIN (
                SELECT
                    userId,
                    MAX(latest_time) AS latest_time
                FROM (
                         SELECT
                             receive_user_id AS userId,
                             MAX(created_time) AS latest_time
                         FROM
                             chat_message
                         WHERE
                             send_user_id = #{id}
                         GROUP BY
                             receive_user_id

                         UNION ALL

                         SELECT
                             send_user_id AS userId,
                             MAX(created_time) AS latest_time
                         FROM
                             chat_message
                         WHERE
                             receive_user_id = #{id}
                         GROUP BY
                             send_user_id
                     ) combined
                GROUP BY userId
            ) cm ON u.id = cm.userId
        WHERE
            uf.follower_id = #{id}
        ORDER BY
            cm.latest_time DESC;
    </select>
    <select id="getFollowedIds" resultType="java.lang.Long">
        select follower_id as followerId from user_following where followed_id = #{userId}
    </select>

</mapper>
